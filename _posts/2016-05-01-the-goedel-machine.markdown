---
layout: post
title:  "The Gödel Machine"
date:   2016-05-01
description: "On Jürgen Schmidhubers Gödel Machine. A self-referential universal problem-solving system that can rewrite itself and interact with a partially observable environment."
---
The Gödel Machine is an invention by Jürgen Schmidhuber proposed in 2003. **It is a self-referential universal problem-solving system that can rewrite itself and interact with a partially observable environment.** To rewrite itself the modification in question is assessed by an internal proof searcher and only accepted if the change is judged to be useful. The initial proof searcher, which can be overwritten by itself, uses a utility function measuring computation time and future reward. The machine is named after the famous Austrian mathematician Kurt Gödel because of its self-referential fashion in proofing useful changes.

## What it is
The Gödel Machine consists of a problem-solving routine to interact with the environment and a general proof search routine which tries to find a proof for a certain rewrite. Once it has found a rewrite which modifies the current machine in a way which leads to a provable higher reward, it will execute this operation. 

The Gödel Machine is an attempt towards solving the Grand Problem of AI or Artificial General Intelligence (AGI). This concept can be understood as a rational learning agent who uses all its resources in an uncertain and partially concealed environment in an optimal way to maximise an expected reward. In the real world, this machine would be able to perform any intellectual task that a human beeing can. 

One of the strengths of the Gödel Machine is that the algorithms used are not hardwired as they are in other Machine Learning technologies. Apart from its simple basis, the algorithm will be able to create improvements on every aspect of itself in an arbitrary computable way. The limitations of the Gödel Machine are related to Kurt Gödels incompleteness theorems. As a result, even a Gödel Machine with unlimited computational resources will not be able to proof beneficial rewrites which are unprovable and therefore ignore its benefits. Another more realistic limitation is the effort needed to find a proof for a profitable rewrite. With limited resources, it cannot benefit from rewrites which are not provable within its time and space constraints. 

An additional problem in my opinion, is the local search conducted by the proof searcher. The proof searcher cannot analyse all possible self-modifications before performing a rewrite since there might be infinite possible operations. This type of local search seems at first greedy and not optimal. However, this hurdle is solved by the author with the global optimality theorem. It states that any rewrite is globally optimal if it can be proven that the current machine will not be able to find a better rewrite sufficiently quick. This neat trick includes the current state of the machine into the evaluation, which then automatically enforces globally optimal self-changes. Such changes could e.g. force an agent to act quickly if near-future consequences of actions are easily provable. However, after many times steps the number of proven theorems will in my current understanding increase dramatically and it will become increasingly computationally expensive to prove new theorems. The material online on Gödel Machines is limited and I have not found any statements, empirical results, or practical implementations to support this opinion.

The general use cases of the Gödel Machine mentioned by Schmidhuber consists of problems such as time-limited NP-hard optimisation and fast theorem proving. The use of uncertainty axioms, however, allows for constructing proofs concerning uncertain properties of the hardware it is running on, as well as, the environment it is operating in. 

## Conclusion
In the end, the Gödel Machine gives the impression of an approach towards the absolute perfect and logical agent. But its strengths are at the same time its biggest weaknesses. It unclear to me how the proof searcher can scale up efficiently in order to operate in complex and uncertain environments. It seems that the agent will need a lot of computation to verify its changes when dealing with uncertainty and a limited amount of time. So if the agent is exposed to great uncertainty, I doubt it will be able to deal with it in an efficient manner. In summary, the Gödel Machine lacks, in my opinion, a sense of intuition which would allow it to jump to conclusions in a computationally cheap manner. 
